<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar" xmlns:vm="clr-namespace:NightscoutTrayWatcher.ViewModels">
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>

    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    ToolTipText="{Binding Path=LastEntryString, Mode=OneWay}"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">
        <!--<tb:TaskbarIcon.Style>
            <Style TargetType="{x:Type tb:TaskbarIcon}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=WebBrowserKeepOpen}" Value="False">
                        <Setter Property="TrayPopupStaysOpen" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=WebBrowserKeepOpen}" Value="True">
                        <Setter Property="TrayPopupStaysOpen" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </tb:TaskbarIcon.Style>-->

        <!-- self-assign a data context (could also be done programmatically) -->
        <tb:TaskbarIcon.DataContext>
            <vm:TrayIconViewModel />
        </tb:TaskbarIcon.DataContext>

        <!--<tb:TaskbarIcon.TrayPopup>
            <Border>
                <local:NightscoutBrowser >
                </local:NightscoutBrowser>
            </Border>
        </tb:TaskbarIcon.TrayPopup>-->
    </tb:TaskbarIcon>

</ResourceDictionary>